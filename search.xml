<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/07/09/hello-world/"/>
      <url>/2021/07/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>欧拉法、改进的欧拉法、龙格-库塔法求解初值问题</title>
      <link href="/2020/07/27/ou-la-fa-gai-jin-de-ou-la-fa-long-ge-ku-ta-fa-qiu-jie-chu-zhi-wen-ti/"/>
      <url>/2020/07/27/ou-la-fa-gai-jin-de-ou-la-fa-long-ge-ku-ta-fa-qiu-jie-chu-zhi-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="欧拉法、改进的欧拉法、龙格-库塔法求解初值问题"><a href="#欧拉法、改进的欧拉法、龙格-库塔法求解初值问题" class="headerlink" title="欧拉法、改进的欧拉法、龙格-库塔法求解初值问题"></a>欧拉法、改进的欧拉法、龙格-库塔法求解初值问题</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>通过求解简单的初值问题：</p><script type="math/tex; mode=display">\begin{cases}\dfrac{du}{dx}=f(x,u)&&&&&&(1)\\u(x_0)=u_0&&&&&&(2)\end{cases}​</script><p>引入欧拉法、改进的欧拉法、龙格-库塔法等。</p><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>数值解法的基本思想就是先对x和u(x)在区间[x0,∞)上进行离散化，然后构造递推公式，再进一步得到u(x)u(x) u(x)u(x)u(x)u(x)在这些位置的近似取值。</p><ul><li>取定步长h，令$x_n=x_0+nh(n=±1,±2,⋯)$</li><li>得到离散的位置：$x_1,x_2,⋯,x_n,$</li><li>u(x)在这些点精确取值为：$u(x_1),u(x_2),⋯,u(x_n)$</li><li>利用数值解法得到的这些点的近似取值，$u_1,u_2,\cdots,u_n$<h2 id="欧拉法"><a href="#欧拉法" class="headerlink" title="欧拉法"></a>欧拉法</h2><h3 id="欧拉法的核心就是将导数近似为差商。"><a href="#欧拉法的核心就是将导数近似为差商。" class="headerlink" title="欧拉法的核心就是将导数近似为差商。"></a>欧拉法的核心就是将导数近似为差商。</h3>将导数近似为向前差商，则有：<script type="math/tex; mode=display">\left.\frac{d u}{d x}\right|_{x=x_{n}} \approx \frac{u\left(x_{n+1}\right)-u\left(x_{n}\right)} {h}</script>代入(1)式，有：<script type="math/tex; mode=display">u\left(x_{n+1}\right)=y\left(x_{n}\right)+h f\left(x_{n} \| u\left(x_{n}\right)\right)</script>用$u_{n+1}$​和 $u_n$代替$u(x_{n+1})$和$u(x_n)$，得：<script type="math/tex; mode=display">u_{n+1}=u_{n}+h f\left(x_{n}, u_{n}\right)</script>因此，若知道$u_0$我们就可以递归出$u_1,u_2,\cdots$<br>如果将导数近似为向后差商:<script type="math/tex; mode=display">\left.\frac{d u}{d x}\right|_{x=x_{n}} \approx \frac{u\left(x_{n}\right)-u\left(x_{n-1}\right)}{h}</script>类似的，就可以得到：<script type="math/tex; mode=display">u_{n-1}=u_{n}-h f\left(x_{n}, u_{n}\right)</script>这样，若知道$u_0$我们就可以递归出$u_{-1}, u_{-2} \cdots$<h2 id="改进的欧拉法"><a href="#改进的欧拉法" class="headerlink" title="改进的欧拉法"></a>改进的欧拉法</h2>对$(1)$式在$[x_n,x_{n+1}]$上积分，可得：<script type="math/tex; mode=display">u\left(x_{n+1}\right)=u\left(x_{n}\right)+\int_{x_{n}}^{x_{n+1}} f(x, u) d x</script>其中，$n=0,1,\cdots$用不同方式来近似上式的积分运算，就会得到不同的递推公式。若使用左端点计算矩形面积并取近似：<script type="math/tex; mode=display">\int_{x_{n}}^{x_{n+1}} f(x, u) d x \approx h f\left(x_{n+1}, u\left(x_{n+1}\right)\right)</script>代入上式得：<script type="math/tex; mode=display">u_{n+1}=u_{n}+hf(x_{n},u_{n})</script>若使用梯形的面积做近似：<script type="math/tex; mode=display">\int_{x_{n}}^{x_{n+1}} f(x, y) d x \approx \frac{h}{2}\left[f\left(x_{n}, u\left(x_{n}\right)\right)+f\left(x_{n+1}, u\left(x_{n+1}\right)\right)\right]</script>得到：<script type="math/tex; mode=display">u_{n+1}=u_{n}+\frac{h}{2}\left[f\left(x_{n}, u_{n}\right)+f\left(x_{n+1}, u_{n+1}\right)\right]</script>欧拉法虽然精度偏低，但它是显式的，可直接得到结果。而梯形公式是隐式的，虽然精度较高，却无法通过一步计算得到结果，若用迭代法计算，运算量较大。综合这两种方法，可以相得益彰：先用显式格式却低精度的欧拉法计算得到一个粗略的预测值$\bar{u}_{n+1}$，再将这个预测值代入梯形公式进行修正，得到较高精度的结果$u_{n+1}$。<script type="math/tex; mode=display">\left\{\begin{array}{l}\bar{u}_{n+1}=u_{n}+h f\left(x_{n}, u_{n}\right) \\u_{n+1}=u_{n}+\frac{h}{2}\left[f\left(x_{n}, u_{n}\right)+f\left(x_{n+1}, \bar{u}_{n+1}\right)\right]\end{array}\right.</script>龙格-库塔法<br>将以上两种方法分别写成如下形式：<script type="math/tex; mode=display">\left\{\begin{array}{l}u_{n+1}=u_{n}+h K_{1} \\K_{1}=f\left(x_{n}, u_{n}\right)\end{array}\right.</script><script type="math/tex; mode=display">\left\{\begin{array}{l}u_{n+1}=u_{n}+\frac{h}{2}\left(K_{1}+K_{2}\right) \\K_{1}=f\left(x_{n}, u_{n}\right) \\K_{2}=f\left(x_{n}+h, u_{n}+K_{1}\right)\end{array}\right.</script>上述方法都是通过$f(x,u)$在不同位置的线性组合来计算$u_{n+1}$​的值，所考虑的位置越多，精度也越高。类似的，就得到龙格-库塔法的思想：<strong>如果用$f(x,u)$在更多位置的线性组合来构造递推公式，将会得到更高的精度。</strong><br>这样，递推公式将有如下形式：<script type="math/tex; mode=display">\left\{\begin{array}{l}u_{n+1}=u_{n}+h \sum_{i=1}^{r} R_{i} K_{i} \\K_{1}=f\left(x_{n}, u_{n}\right) \\K_{i}=f\left(x_{n}+a_{i} h, u_{n}+\sum_{j=1}^{i-1} b_{i j} K_{j}\right), i=2,3, \cdots, r\end{array}\right.</script>其中，$R_{i},a_i,b_{ij}$为待定常数。(利用$Taylor$展开就可以确定待定系数)</li></ul><h2 id="标准四阶显式Kutta公式"><a href="#标准四阶显式Kutta公式" class="headerlink" title="标准四阶显式Kutta公式"></a>标准四阶显式Kutta公式</h2><script type="math/tex; mode=display">\left\{\begin{array}{l}y_{n+1}=y_{n}+\frac{h}{6}\left(K_{1}+4 K_{2}+K_{3}\right) \\K_{1}=f\left(x_{n}, y_{n}\right) \\K_{2}=f\left(x_{n}+\frac{1}{2} h, y_{n}+\frac{1}{2} h K_{1}\right) \\K_{3}=f\left(x_{n}+h, y_{n}-h K_{1}+2 h K_{2}\right)\end{array}\right.</script><h2 id="三级三阶显式公式"><a href="#三级三阶显式公式" class="headerlink" title="三级三阶显式公式"></a>三级三阶显式公式</h2><script type="math/tex; mode=display">\left\{\begin{array}{l}y_{n+1}=y_{n}+\frac{h}{4}\left(K_{1}+3 K_{3}\right) \\K_{1}=f\left(x_{n}, y_{n}\right) \\K_{2}=f\left(x_{n}+\frac{1}{3} h, y_{n}+\frac{1}{3} h K_{1}\right) \\K_{3}=f\left(x_{n}+\frac{2}{3} h, y_{n}+\frac{2}{3} h K_{2}\right)\end{array}\right.</script><h2 id="四级四阶显式Kutta公式"><a href="#四级四阶显式Kutta公式" class="headerlink" title="四级四阶显式Kutta公式"></a>四级四阶显式Kutta公式</h2><script type="math/tex; mode=display">\left\{\begin{array}{l}y_{n+1}=y_{n}+\frac{h}{8}\left(K_{1}+3 K_{2}+3 K_{3}+K_{4}\right) \\K_{1}=f\left(x_{n}, y_{n}\right) \\K_{2}=f\left(x_{n}+\frac{1}{3} h, y_{n}+\frac{1}{3} h K_{1}\right) \\K_{3}=f\left(x_{n}+\frac{2}{3} h, y_{n}-\frac{2}{3} h K_{1}+h K_{2}\right) \\K_{4}=f\left(x_{n}+h, y_{n}+h K_{1}-h K_{2}+h K_{3}\right)\end{array}\right.</script><h2 id="四级四阶显式Gill公式"><a href="#四级四阶显式Gill公式" class="headerlink" title="四级四阶显式Gill公式"></a>四级四阶显式Gill公式</h2><script type="math/tex; mode=display">\left\{\begin{array}{l}y_{n+1}=y_{n}+\frac{h}{6}\left(K_{1}+(2-\sqrt{2}) K_{2}+(2+\sqrt{2}) K_{3}+K_{4}\right) \\K_{1}=f\left(x_{n}, y_{n}\right) \\K_{2}=f\left(x_{n}+\frac{1}{2} h, y_{n}+\frac{1}{2} h K_{1}\right) \\K_{3}=f\left(x_{n}+\frac{1}{2} h, y_{n}+\frac{\sqrt{2}-1}{2} h K_{1}+\left(1-\frac{\sqrt{2}}{2}\right) h K_{2}\right) \\K_{4}=f\left(x_{n}+h, y_{n}-\frac{\sqrt{2}}{2} h K_{2}+\left(1+\frac{\sqrt{2}}{2}\right) h K_{3}\right)\end{array}\right.</script><h2 id="三个例题"><a href="#三个例题" class="headerlink" title="三个例题"></a>三个例题</h2><h3 id="1-分别用-Euler-法，改进的-Euler-法和经典-4-阶龙格-库塔法计算下列初值问题，并绘图比较"><a href="#1-分别用-Euler-法，改进的-Euler-法和经典-4-阶龙格-库塔法计算下列初值问题，并绘图比较" class="headerlink" title="1 分别用 Euler 法，改进的 Euler 法和经典 4 阶龙格-库塔法计算下列初值问题，并绘图比较:"></a>1 分别用 Euler 法，改进的 Euler 法和经典 4 阶龙格-库塔法计算下列初值问题，并绘图比较:</h3><p>$\left\{\begin{array}{ll}y^{\prime}=-y(1+x y) &amp; (0 \leq x \leq 1) \\ y(0)=1 &amp; \end{array} \quad\left(\text { 精确解 }: \quad y(x)=\left(2 e^{x}-x-1\right)^{-1}\right)\right.$</p><h4 id="matlab代码"><a href="#matlab代码" class="headerlink" title="matlab代码"></a>matlab代码</h4><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear all<span class="token punctuation">,</span>close allf<span class="token operator">=</span><span class="token operator">@</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token operator">-</span>y<span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>x<span class="token operator">*</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>h<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">;</span><span class="token comment">%% Euler method</span>x<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">:</span>h<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>N<span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>y1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> n<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>N    <span class="token function">y1</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">y1</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token operator">*</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">y1</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token comment">%% Improved Euler method</span>y2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> n<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>N    <span class="token function">y2</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">y2</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token operator">*</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">y2</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">y2</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">y2</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token operator">/</span><span class="token number">2</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">y2</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">y2</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token comment">%% Standard fourth-order explicit Kutta formula</span>y3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> n<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>N    K1<span class="token operator">=</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">y3</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    K2<span class="token operator">=</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">*</span>h<span class="token punctuation">,</span><span class="token function">y3</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">*</span>h<span class="token operator">*</span>K1<span class="token punctuation">)</span><span class="token punctuation">;</span>    K3<span class="token operator">=</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token punctuation">,</span><span class="token function">y3</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">-</span>h<span class="token operator">*</span>K1<span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span>h<span class="token operator">*</span>K2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">y3</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">y3</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token operator">/</span><span class="token number">6</span><span class="token operator">*</span><span class="token punctuation">(</span>K1<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>K2<span class="token operator">+</span>K3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token comment">%% 绘图</span>y<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token function">exp</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">-</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">.^</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">%  Exact solution</span><span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">'k'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>y1<span class="token punctuation">,</span><span class="token string">'xr'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>y2<span class="token punctuation">,</span><span class="token string">'ob'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>y3<span class="token punctuation">,</span><span class="token string">'*r'</span><span class="token punctuation">,</span><span class="token string">'Markersize'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">'Exact'</span><span class="token punctuation">,</span><span class="token string">'Euler'</span><span class="token punctuation">,</span><span class="token string">'Improved Euler'</span><span class="token punctuation">,</span><span class="token string">'Standard fourth-order Kutta'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h4><p><img src="https://picturesshare.oss-cn-beijing.aliyuncs.com/imgTIM%E5%9B%BE%E7%89%8720200728203803.png" alt="第一题答案"></p><h3 id="2-分别用-Euler-法，改进的-Euler-法和经典-4-阶龙格-库塔法计算下列初值问题，并绘图比较"><a href="#2-分别用-Euler-法，改进的-Euler-法和经典-4-阶龙格-库塔法计算下列初值问题，并绘图比较" class="headerlink" title="2.分别用 Euler 法，改进的 Euler 法和经典 4 阶龙格-库塔法计算下列初值问题，并绘图比较:"></a>2.分别用 Euler 法，改进的 Euler 法和经典 4 阶龙格-库塔法计算下列初值问题，并绘图比较:</h3><p>(2) $\left\{\begin{array}{l}\frac{\mathrm{d} x}{\mathrm{d} t}=x+y, x(0)=1 \\ \frac{\mathrm{d} y}{\mathrm{d} t}=-x+y, y(0)=2\end{array}\right.$<br>(精确解: $\left\{\begin{array}{l}x=e^{t} \cos t+2 e^{t} \sin t \\ y=-e^{t} \sin t+2 e^{t} \cos t\end{array}\right)$<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear all<span class="token punctuation">,</span>close allh<span class="token operator">=</span><span class="token number">0.15</span><span class="token punctuation">;</span> <span class="token comment">%定义步长</span>t<span class="token operator">=</span><span class="token number">0</span><span class="token operator">:</span>h<span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">%给定参数t的范围</span>N<span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">%% Euler method</span><span class="token function">Y1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%赋初值</span><span class="token keyword">for</span> n<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>N    <span class="token function">Y1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">Y1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token operator">*</span><span class="token function">F1</span><span class="token punctuation">(</span><span class="token function">t</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Y1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span>x1<span class="token operator">=</span><span class="token function">Y1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>y1<span class="token operator">=</span><span class="token function">Y1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%% Improved Euler method</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> n<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>N    <span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token operator">*</span><span class="token function">F1</span><span class="token punctuation">(</span><span class="token function">t</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token operator">/</span><span class="token number">2</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">F1</span><span class="token punctuation">(</span><span class="token function">t</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">F1</span><span class="token punctuation">(</span><span class="token function">t</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span>x2<span class="token operator">=</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>y2<span class="token operator">=</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%% Standard fourth-order explicit Kutta formula</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> n<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>N    K1<span class="token operator">=</span><span class="token function">F1</span><span class="token punctuation">(</span><span class="token function">t</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    K2<span class="token operator">=</span><span class="token function">F1</span><span class="token punctuation">(</span><span class="token function">t</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">*</span>h<span class="token punctuation">,</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">*</span>h<span class="token operator">*</span>K1<span class="token punctuation">)</span><span class="token punctuation">;</span>    K3<span class="token operator">=</span><span class="token function">F1</span><span class="token punctuation">(</span><span class="token function">t</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token punctuation">,</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">-</span>h<span class="token operator">*</span>K1<span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span>h<span class="token operator">*</span>K2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Y3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token operator">/</span><span class="token number">6</span><span class="token operator">*</span><span class="token punctuation">(</span>K1<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>K2<span class="token operator">+</span>K3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span>x3<span class="token operator">=</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>y3<span class="token operator">=</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%% 精确解</span>x<span class="token operator">=</span><span class="token function">exp</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">.*</span><span class="token function">cos</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span><span class="token function">exp</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">.*</span><span class="token function">sin</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token function">exp</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">.*</span><span class="token function">sin</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span><span class="token function">exp</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">.*</span><span class="token function">cos</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%% 绘图比较</span>figure<span class="token function">set</span><span class="token punctuation">(</span>gcf<span class="token punctuation">,</span><span class="token string">'position'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0.15</span> <span class="token number">0.2</span> <span class="token number">0.7</span> <span class="token number">0.6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">plot</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>x<span class="token punctuation">,</span><span class="token string">'k'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>x1<span class="token punctuation">,</span><span class="token string">'xr'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>x2<span class="token punctuation">,</span><span class="token string">'ob'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>x3<span class="token punctuation">,</span><span class="token string">'*r'</span><span class="token punctuation">,</span><span class="token string">'Markersize'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">'Exact'</span><span class="token punctuation">,</span><span class="token string">'Euler'</span><span class="token punctuation">,</span><span class="token string">'Improved Euler'</span><span class="token punctuation">,</span><span class="token string">'Standard fourth-order Kutta'</span><span class="token punctuation">)</span><span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'t'</span><span class="token punctuation">)</span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">)</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token function">plot</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">'k'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>y1<span class="token punctuation">,</span><span class="token string">'xr'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>y2<span class="token punctuation">,</span><span class="token string">'ob'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>y3<span class="token punctuation">,</span><span class="token string">'*r'</span><span class="token punctuation">,</span><span class="token string">'Markersize'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">'Exact'</span><span class="token punctuation">,</span><span class="token string">'Euler'</span><span class="token punctuation">,</span><span class="token string">'Improved Euler'</span><span class="token punctuation">,</span><span class="token string">'Standard fourth-order Kutta'</span><span class="token punctuation">)</span><span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'t'</span><span class="token punctuation">)</span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h4 id="函数脚本"><a href="#函数脚本" class="headerlink" title="函数脚本"></a>函数脚本</h4><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> F1<span class="token operator">=</span><span class="token function">f</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>Y<span class="token punctuation">)</span><span class="token comment">%定义所求微分方程</span>x<span class="token operator">=</span><span class="token function">Y</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>y<span class="token operator">=</span><span class="token function">Y</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f1<span class="token operator">=</span>x<span class="token operator">+</span>y<span class="token punctuation">;</span>f2<span class="token operator">=</span><span class="token operator">-</span>x<span class="token operator">+</span>y<span class="token punctuation">;</span>F1<span class="token operator">=</span><span class="token punctuation">[</span>f1<span class="token punctuation">;</span>f2<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://picturesshare.oss-cn-beijing.aliyuncs.com/imgTIM%E5%9B%BE%E7%89%8720200728205805.png" alt="第二题答案"></p><h3 id="3-分别用-Euler-法，改进的-Euler-法和经典-4-阶龙格-库塔法计算下列初值问题，并绘图比较"><a href="#3-分别用-Euler-法，改进的-Euler-法和经典-4-阶龙格-库塔法计算下列初值问题，并绘图比较" class="headerlink" title="3.分别用 Euler 法，改进的 Euler 法和经典 4 阶龙格-库塔法计算下列初值问题，并绘图比较:"></a>3.分别用 Euler 法，改进的 Euler 法和经典 4 阶龙格-库塔法计算下列初值问题，并绘图比较:</h3><p>(3) $\left\{\begin{array}{l}y^{\prime \prime}=5 e^{2 x} \sin x-2 y+2 y^{\prime}, \quad x \in[0,20] \\ y(0)=-2, y^{\prime}(0)=-3\end{array}\right.$<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear all<span class="token punctuation">,</span>close allh<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">;</span> <span class="token comment">%定义步长</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token operator">:</span>h<span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">%给定参数t的范围</span>N<span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">%% Euler method</span><span class="token function">Y1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%赋初值</span><span class="token keyword">for</span> n<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>N    <span class="token function">Y1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">Y1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token operator">*</span><span class="token function">F2</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Y1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span>y1<span class="token operator">=</span><span class="token function">Y1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%% Improved Euler method</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> n<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>N    <span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token operator">*</span><span class="token function">F2</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token operator">/</span><span class="token number">2</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">F2</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">F2</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span>y2<span class="token operator">=</span><span class="token function">Y2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%% Standard fourth-order explicit Kutta formula</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> n<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>N    K1<span class="token operator">=</span><span class="token function">F2</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    K2<span class="token operator">=</span><span class="token function">F2</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">*</span>h<span class="token punctuation">,</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">*</span>h<span class="token operator">*</span>K1<span class="token punctuation">)</span><span class="token punctuation">;</span>    K3<span class="token operator">=</span><span class="token function">F2</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token punctuation">,</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">-</span>h<span class="token operator">*</span>K1<span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span>h<span class="token operator">*</span>K2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Y3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">+</span>h<span class="token operator">/</span><span class="token number">6</span><span class="token operator">*</span><span class="token punctuation">(</span>K1<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>K2<span class="token operator">+</span>K3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span>y3<span class="token operator">=</span><span class="token function">Y3</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%% 绘图比较</span><span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y1<span class="token punctuation">,</span><span class="token string">'xr'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>y2<span class="token punctuation">,</span><span class="token string">'ob'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>y3<span class="token punctuation">,</span><span class="token string">'*r'</span><span class="token punctuation">,</span><span class="token string">'Markersize'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">'Euler'</span><span class="token punctuation">,</span><span class="token string">'Improved Euler'</span><span class="token punctuation">,</span><span class="token string">'Standard fourth-order Kutta'</span><span class="token punctuation">)</span><span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">)</span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h4 id="函数脚本-1"><a href="#函数脚本-1" class="headerlink" title="函数脚本"></a>函数脚本</h4><pre><code class="lang-matlab">function F2=f(x,Y)%定义所求微分方程z=Y(1);y=Y(2);f1=5*exp(2*x).*sin(x)-2*y+2*z;f2=z;F2=[f1;f2]</code></pre><h4 id="运行结果-2"><a href="#运行结果-2" class="headerlink" title="运行结果"></a>运行结果</h4><p><img src="https://picturesshare.oss-cn-beijing.aliyuncs.com/imgTIM%E5%9B%BE%E7%89%8720200728205933.png" alt="第三题结果"></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微分方程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dijkstra算法</title>
      <link href="/2020/07/21/dijkstra-suan-fa/"/>
      <url>/2020/07/21/dijkstra-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Dijkstra算法"><a href="#Dijkstra算法" class="headerlink" title="Dijkstra算法"></a>Dijkstra算法</h1><p>————————赋权图中从给定点到其余顶点的最短路<br><pre class="line-numbers language-Dijkstra算法```实际上是一个贪婪算法（Greedy" data-language="Dijkstra算法```实际上是一个贪婪算法（Greedy"><div class="caption"><span>algorithm）。因为该算法总是试图优先访问每一步循环中距离起始点最近的下一个结点。Dijkstra算法的过程如下图所示。</span></div><code class="language-Dijkstra算法```实际上是一个贪婪算法（Greedy">![Dijkstra算法示意图](https:&#x2F;&#x2F;picturesshare.oss-cn-beijing.aliyuncs.com&#x2F;img2112205-e9b1a08dcba5e42c.gif)## 基本思想1. 按距离u0 由近及远为顺序，依次求得u0 到G的各顶点的最短路和距离，直至G的所有顶点，算法结束。2. 采用标号作业法,每次迭代产生一个永久标号,  从而生长一颗以u0为根的最短路树,在这颗树上每个顶点与根节点之间的路径皆为最短路径.      ## 使用范围1. 寻求从一固定顶点到其余各点的最短路径;2. 有向图、无向图和混合图;3. 权非负。     ## 初始化1. 给定图中的一个结点s作为起始点。2. 给定一个数组dist[]存储图中所有结点到s的距离。将dist[s]初始化为0。对于图中的其他结点v，初始化dist[v]为无穷大。初始化为无穷大的意义在于我们假设其余所有结点在当前情况下尚未与s联通。随着算法的执行，dist[v]会保存图中从s到v的最短路径的距离。3. 给定一个minimum Heap，记为Q。堆顶为当前情况下距离s最近的结点及相应的距离。将(s, 0)放入堆中。4. 给定一个Set，记为S，保存所有已经访问过的结点。Set初始为空。基于Dijkstra算法的性质，我们总是以最短的路径遍历每一个结点，因此对于任一结点，一旦我们已经访问过，就代表着我们已经得到了从s到达这一结点的最短路径。## 计算最短路径当Q不为空的情况下，取出堆顶的元素(v, [dist[v]) —— 也就是当前距离s最近的结点v，及其距离dist[v]。如果v在S中，则代表我们已经访问过v的最短路径。那么跳过当前v，重复步骤1。否则，将v放在S中。对于每一个与v相邻的结点t：如果dist[v] + weight(v, t) &lt; dist[t]，则更新dist[t] &#x3D; dist[v] + weight(v, t)。同时将(t, dist[t])放进Q中。否则，不做任何处理。当算法结束后，dist[]中保存图中每一个除s之外的结点到s的最短路径的权重值（或长度）。如果从s到v不存在联通的路径，则dist[v] &#x3D; ∞。## 证明算法正确性假设对于每个已经访问过的结点v，dist[v]存储从起始点s到v的最短路径。  当算法初始化时，dist[]中只包含dist[s] &#x3D; 0，其正确性显而易见。  对于其余n-1个结点，假设u已经被访问且v尚未被访问，同时u和v之间存在一条边u -&gt; v，其权重为weight(u,v)，那么一定有dist[v] &#x3D; dist[u] + weight(u, v)。否则的话，假设存在另一条更短的路径dist[t]满足dist[t] + weight(t, v)，则根据上述算法，t一定先于u被访问，则与我们当前的假设产生了矛盾。该论断对于余下的所有结点都成立。   因此Dijkstra算法一定能给出从出发点到其余所有结点（在可以到达的情况下）的最短路径。   ## Dijkstra算法伪代码 &#96;&#96;&#96;伪代码function Dijkstra(Graph, source):    create vertex set Q                     &#x2F;&#x2F; 未知最短路径的顶点集合    for each vertex v in Graph:        dist[v] ← INFINITY                  &#x2F;&#x2F; 起始点到该顶点的最短路径长度        prev[v] ← UNDEFINED                 &#x2F;&#x2F; 最短路径中该顶点的前置顶点        add v to Q                          &#x2F;&#x2F; 初始时，所有节点都是未知最短路径的顶点    dist[source] ← 0                        &#x2F;&#x2F; 将起始点的路径长度设为 0    while Q is not empty:        u ← vertex in Q with min dist[u]    &#x2F;&#x2F; 选取路径长度最短的一个        remove u from Q         for each adjacent v of u:           &#x2F;&#x2F; 遍历选取的顶点的邻接顶点            alt ← dist[u] + length(u, v)            if alt &lt; dist[v]:               &#x2F;&#x2F; 计算得到的路径比原有的小                dist[v] ← alt                 prev[v] ← u     return dist[], prev[]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="Dijkstra算法matlab实现"><a href="#Dijkstra算法matlab实现" class="headerlink" title="Dijkstra算法matlab实现"></a>Dijkstra算法matlab实现</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span>min<span class="token punctuation">,</span>path<span class="token punctuation">]</span> <span class="token operator">=</span><span class="token function">dijkstra</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span>start<span class="token punctuation">,</span>terminal<span class="token punctuation">)</span> n<span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">label</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n     <span class="token keyword">if</span> <span class="token number">i</span><span class="token operator">~=</span>start         <span class="token function">label</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token keyword">inf</span><span class="token punctuation">;</span>     <span class="token keyword">end</span> <span class="token keyword">end</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span>start<span class="token punctuation">;</span> u<span class="token operator">=</span>start<span class="token punctuation">;</span> <span class="token keyword">while</span> <span class="token function">length</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">&lt;</span>n     <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n         ins<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>             <span class="token keyword">if</span> <span class="token number">i</span><span class="token operator">==</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span>                 ins<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>             <span class="token keyword">end</span>         <span class="token keyword">end</span>         <span class="token keyword">if</span> ins<span class="token operator">==</span><span class="token number">0</span>             v<span class="token operator">=</span><span class="token number">i</span><span class="token punctuation">;</span>             <span class="token function">iflabel</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">label</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">w</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">label</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token function">label</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">w</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token function">f</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token operator">=</span>u<span class="token punctuation">;</span>             <span class="token keyword">end</span>         <span class="token keyword">end</span>     <span class="token keyword">end</span>     v1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>     k<span class="token operator">=</span><span class="token keyword">inf</span><span class="token punctuation">;</span>     <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n         ins<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>             <span class="token keyword">if</span> <span class="token number">i</span><span class="token operator">==</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span>                 ins<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>             <span class="token keyword">end</span>         <span class="token keyword">end</span>         <span class="token keyword">if</span> ins<span class="token operator">==</span><span class="token number">0</span>             v<span class="token operator">=</span><span class="token number">i</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> k<span class="token operator">></span><span class="token function">label</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>                 k<span class="token operator">=</span><span class="token function">label</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>                 v1<span class="token operator">=</span>v<span class="token punctuation">;</span>             <span class="token keyword">end</span>         <span class="token keyword">end</span>     <span class="token keyword">end</span>     <span class="token function">s</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span>v1<span class="token punctuation">;</span>     u<span class="token operator">=</span>v1<span class="token punctuation">;</span> <span class="token keyword">end</span> min<span class="token operator">=</span><span class="token function">label</span><span class="token punctuation">(</span>terminal<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span>terminal<span class="token punctuation">;</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">while</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">~=</span>start     <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token number">i</span><span class="token operator">=</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">end</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span>start<span class="token punctuation">;</span> L<span class="token operator">=</span><span class="token function">length</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span> path<span class="token operator">=</span><span class="token function">path</span><span class="token punctuation">(</span>L<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Dijkstra算法程序的使用说明：<br> 调用格式为 [min,path]=dijkstra(w,start,terminal),<br>其中输入变量w为所求图的带权邻接矩阵，start, terminal分别为路径的起点和终点的号码。返回start到terminal的最短路径path及其长度min.</p><blockquote><p>注意：顶点的编号从1开始连续编号。</p><h2 id="matlab图论工具箱"><a href="#matlab图论工具箱" class="headerlink" title="matlab图论工具箱"></a>matlab图论工具箱</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">graphshortestpath</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>s<span class="token punctuation">,</span>t<span class="token punctuation">,</span><span class="token string">'directed'</span><span class="token punctuation">,</span> DirectedValue<span class="token punctuation">,</span><span class="token string">'method'</span><span class="token punctuation">,</span> MethodValue<span class="token punctuation">)</span><span class="token comment">%x，y，z分别用来存放最短路径的值，标号顶点顺序、标号顶点索引, z可以不用求</span><span class="token comment">% directed是标志图为有向或无向的属性，该图是无向图，对应的属性值为false或0</span><span class="token comment">% method表示用的算法，默认值是Dijkstra</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="求解实例"><a href="#求解实例" class="headerlink" title="求解实例"></a>求解实例</h2><p>求下面赋权图中顶点u0到其余顶点的最短路．<br><img src="https://picturesshare.oss-cn-beijing.aliyuncs.com/img%E5%9B%BE%E7%89%871.png" alt="">  </p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>M<span class="token operator">=</span><span class="token keyword">inf</span><span class="token punctuation">;</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>M<span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span>M<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>M<span class="token punctuation">,</span>M<span class="token punctuation">,</span>M <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token number">5</span><span class="token punctuation">,</span>M M M<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token number">6</span> M M<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">4</span> <span class="token number">3</span> M<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">6</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>a<span class="token operator">=</span>a<span class="token operator">+</span>a<span class="token operator">'</span><span class="token punctuation">;</span>b<span class="token operator">=</span><span class="token function">sparse</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%h = view(biograph(b,[],'ShowWeights','on'))</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">graphshortestpath</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'directed'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'method'</span><span class="token punctuation">,</span><span class="token string">'Dijkstra'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最终结果"><a href="#最终结果" class="headerlink" title="最终结果"></a>最终结果</h3><p><img src="https://picturesshare.oss-cn-beijing.aliyuncs.com/img%E5%9B%BE%E7%89%872.png" alt=""><br><img src="https://picturesshare.oss-cn-beijing.aliyuncs.com/img20200721212004.png" alt=""></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最短路问题及算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kmeans聚类matlab实现</title>
      <link href="/2020/07/19/kmeans-ju-lei-matlab-shi-xian/"/>
      <url>/2020/07/19/kmeans-ju-lei-matlab-shi-xian/</url>
      
        <content type="html"><![CDATA[<h2 id="非监督算法"><a href="#非监督算法" class="headerlink" title="非监督算法"></a>非监督算法</h2><p>k-means是一个非监督算法，以前我们学的都是监督算法或者半监督算法，例如多元回归，贝叶斯判别，支持向量机，随机森林算法等。而这种距离算法则是非监督算法。</p><blockquote><p>PS：常见的聚类方法有：系统聚类法，k均值聚类法<br>系统聚类法 是计算所有数据之间的距离，根据不同的分类数，迭代，直到全部不能分为止，意思是你想要多少类都能分给你。  </p><h2 id="聚类算法"><a href="#聚类算法" class="headerlink" title="聚类算法"></a>聚类算法</h2><p>聚类算法根据数据之间的相似性或者距离将数据分为几个簇，簇与簇之间不同。   </p></blockquote><h2 id="k-means-聚类算法"><a href="#k-means-聚类算法" class="headerlink" title="k-means 聚类算法"></a>k-means 聚类算法</h2><p>在这个算法中，我们需要提前指定数据可能分成的堆数，每个数据对象在不同的堆里都不同。<br>两个距离：（距离体现了他们之间的差异性）  </p><ol><li>个体与个体之间的距离  </li><li>与类之间的距离      </li></ol><p>距离的计算种类：马氏距离，欧氏距离，明氏距离等<br>每一个簇都有聚类中心，根据数据到聚类中心的距离，把它归为哪一类。  </p><h2 id="算法实施流程"><a href="#算法实施流程" class="headerlink" title="算法实施流程"></a>算法实施流程</h2><p>初始化，选择适当的k中心数，在数据中随机选择k个中心<br>计算每个点到中心的距离，把它划分到近的簇，进行聚类。<br>重新计算聚类中心，使得内部和最小。<br>重复上述两个步骤，直到结果不再变化。  </p><h2 id="k-means的伪代码"><a href="#k-means的伪代码" class="headerlink" title="k-means的伪代码"></a>k-means的伪代码</h2><pre class="line-numbers language-none"><code class="language-none">输入:样本集D &#x3D; &#123;x1,x2,x3,...,xm&#125;;   聚类簇数k.过程:从D中随机抽取k个样本作为初始均值向量&#123;u1,u2,...,uk&#125;repeat初始化Cl &#x3D; ∅(1≤l≤k)for i &#x3D; 1:m计算样本xi与各均值向量uj(1≤j≤k)的距离d;根据距离最近的均值向量确定xi的簇标记;将样本xi划入相应的簇Cl;endfor j &#x3D; 1:k计算新的均值向量new_uj:对簇中每个样本求和&#x2F;簇中样本的个数if new_uj ≠ uj将当前均值向量uj更新为new_ujelse保持当前均值向量不变endenduntil 当前均值向量均未更新输出:簇划分为C &#x3D; &#123;C1,C2,...,Ck&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="matlab自写函数的实现"><a href="#matlab自写函数的实现" class="headerlink" title="matlab自写函数的实现"></a>matlab自写函数的实现</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear all<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>clc<span class="token punctuation">;</span><span class="token comment">%第一类数据</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>  S1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">.1</span> <span class="token number">0</span> <span class="token punctuation">;</span><span class="token number">0</span> <span class="token number">.1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  data1<span class="token operator">=</span><span class="token function">mvnrnd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>S1<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">%产生高斯分布数据</span><span class="token comment">%第二类数据</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1.2</span> <span class="token number">1.2</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>S2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">.1</span> <span class="token number">0</span> <span class="token punctuation">;</span><span class="token number">0</span> <span class="token number">.1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>data2<span class="token operator">=</span><span class="token function">mvnrnd</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>S2<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 第三类数据</span>c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.2</span> <span class="token number">1.2</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>S3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">.1</span> <span class="token number">0</span> <span class="token punctuation">;</span><span class="token number">0</span> <span class="token number">.1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>data3<span class="token operator">=</span><span class="token function">mvnrnd</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>S3<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%显示数据</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">data1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">data1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'r+'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hold on<span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">data2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">data2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'b*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">data3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">data3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'go'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>grid on<span class="token punctuation">;</span> <span class="token comment">%三类数据合成一个不带标号的数据类</span>data<span class="token operator">=</span><span class="token punctuation">[</span>data1<span class="token punctuation">;</span>data2<span class="token punctuation">;</span>data3<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">%K-means聚类</span>N<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">%设置聚类数目</span><span class="token punctuation">[</span>m<span class="token punctuation">,</span>n<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>re<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>center<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span>N<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%初始化聚类中心</span><span class="token function">re</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">:</span>n<span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> x<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>N    <span class="token function">center</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">data</span><span class="token punctuation">(</span> <span class="token function">randi</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%第一次随机产生聚类中心</span><span class="token keyword">end</span><span class="token keyword">while</span> <span class="token number">1</span>distence<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token punctuation">;</span>num<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token punctuation">;</span>new_center<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span>N<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">for</span> x<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m    <span class="token keyword">for</span> y<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>N    <span class="token function">distence</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token function">data</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">center</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%计算到每个类的距离</span>    <span class="token keyword">end</span>    <span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span> temp<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>distence<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%求最小的距离</span>    <span class="token function">re</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span>temp<span class="token punctuation">;</span>         <span class="token keyword">end</span>k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span> y<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>N    <span class="token keyword">for</span> x<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m        <span class="token keyword">if</span> <span class="token function">re</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span>y           <span class="token function">new_center</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">new_center</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">re</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">:</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token function">num</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">num</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span>    <span class="token function">new_center</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">new_center</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">num</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token function">norm</span><span class="token punctuation">(</span><span class="token function">new_center</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">center</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0.1</span>        k<span class="token operator">=</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">if</span> k<span class="token operator">==</span>N     <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">else</span>     center<span class="token operator">=</span>new_center<span class="token punctuation">;</span><span class="token keyword">end</span><span class="token keyword">end</span><span class="token punctuation">[</span>m<span class="token punctuation">,</span> n<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>re<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%最后显示聚类后的数据</span>figure<span class="token punctuation">;</span>hold on<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m    <span class="token keyword">if</span> <span class="token function">re</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span>          <span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">re</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">re</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'r+'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'ko'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">elseif</span> <span class="token function">re</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">2</span>         <span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">re</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">re</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'b*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'ko'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">elseif</span> <span class="token function">re</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">3</span>         <span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">re</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">re</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'go'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'ko'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>         <span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">re</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">re</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'m*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'ko'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="借助matlab工具箱的实现"><a href="#借助matlab工具箱的实现" class="headerlink" title="借助matlab工具箱的实现"></a>借助matlab工具箱的实现</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear all<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>clc<span class="token punctuation">;</span><span class="token comment">%第一类数据</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>  S1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">.1</span> <span class="token number">0</span> <span class="token punctuation">;</span><span class="token number">0</span> <span class="token number">.1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  data1<span class="token operator">=</span><span class="token function">mvnrnd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>S1<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">%产生高斯分布数据</span><span class="token comment">%第二类数据</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1.2</span> <span class="token number">1.2</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>S2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">.1</span> <span class="token number">0</span> <span class="token punctuation">;</span><span class="token number">0</span> <span class="token number">.1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>data2<span class="token operator">=</span><span class="token function">mvnrnd</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>S2<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 第三类数据</span>c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.2</span> <span class="token number">1.2</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>S3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">.1</span> <span class="token number">0</span> <span class="token punctuation">;</span><span class="token number">0</span> <span class="token number">.1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>data3<span class="token operator">=</span><span class="token function">mvnrnd</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>S3<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%显示数据</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">data1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">data1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'r+'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hold on<span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">data2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">data2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'b*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">data3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">data3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'go'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>grid on<span class="token punctuation">;</span> <span class="token comment">%三类数据合成一个不带标号的数据类</span>data<span class="token operator">=</span><span class="token punctuation">[</span>data1<span class="token punctuation">;</span>data2<span class="token punctuation">;</span>data3<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>Idx<span class="token punctuation">,</span>C<span class="token punctuation">,</span>sumD<span class="token punctuation">,</span>D<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">kmeans</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'dist'</span><span class="token punctuation">,</span><span class="token string">'sqEuclidean'</span><span class="token punctuation">,</span><span class="token string">'rep'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">data</span><span class="token punctuation">(</span>Idx<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span>Idx<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'r+'</span><span class="token punctuation">,</span><span class="token string">'MarkerSize'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span>hold on<span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">data</span><span class="token punctuation">(</span>Idx<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span>Idx<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'b*'</span><span class="token punctuation">,</span><span class="token string">'MarkerSize'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span>hold on<span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">data</span><span class="token punctuation">(</span>Idx<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span>Idx<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'go'</span><span class="token punctuation">,</span><span class="token string">'MarkerSize'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'kx'</span><span class="token punctuation">,</span><span class="token punctuation">...</span>     <span class="token string">'MarkerSize'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">'Cluster 1'</span><span class="token punctuation">,</span><span class="token string">'Cluster 2'</span><span class="token punctuation">,</span><span class="token string">'Cluster 3'</span><span class="token punctuation">,</span><span class="token string">'Centroids'</span><span class="token punctuation">,</span><span class="token punctuation">...</span>       <span class="token string">'Location'</span><span class="token punctuation">,</span><span class="token string">'NW'</span><span class="token punctuation">)</span>hold off<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h2><p><img src="https://picturesshare.oss-cn-beijing.aliyuncs.com/img20200719101948.png" alt="原始数据">   </p><p><img src="https://picturesshare.oss-cn-beijing.aliyuncs.com/img20200719102052.png" alt="聚类以后的结果"></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kmeans算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matlab求积分</title>
      <link href="/2020/07/06/matlab-qiu-ji-fen/"/>
      <url>/2020/07/06/matlab-qiu-ji-fen/</url>
      
        <content type="html"><![CDATA[<h1 id="matlab求微分与积分"><a href="#matlab求微分与积分" class="headerlink" title="matlab求微分与积分"></a>matlab求微分与积分</h1><h2 id="1-极限"><a href="#1-极限" class="headerlink" title="1.极限"></a>1.极限</h2><h3 id="1-1-Limit-函数的调用"><a href="#1-1-Limit-函数的调用" class="headerlink" title="1.1 Limit 函数的调用"></a>1.1 Limit 函数的调用</h3><blockquote><p> limit（exp，x,a); %求符号表达式exp当自变量x趋于a时的极限<br> limit（exp，a);   %求符号表达式exp当默认自变量趋于a时的极限 limit（exp）；     %求符号表达式exp当默认自变量趋于0时的极限<br>limit （exp，x,a，’left’); %求符号表达式exp当默认自变量趋于a时的左极限<br> limit（exp，x,a，’right’);   %求符号表达式exp当默认自变量趋于a时的左极限   </p></blockquote><h3 id="1-2-limit函数的例子"><a href="#1-2-limit函数的例子" class="headerlink" title="1.2 limit函数的例子"></a>1.2 limit函数的例子</h3><p>计算表达式 $\lim\limits_{x\to\ 0}\frac{sin(x)}{x}$ 、$\lim\limits_{x\to\infty-}$${ (1+{1\over x}) }^x$<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> clear all<span class="token operator">></span><span class="token operator">></span> syms x<span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">limit</span> <span class="token punctuation">(</span><span class="token function">sin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">/</span>x<span class="token punctuation">)</span>ans <span class="token operator">=</span><span class="token number">1</span> <span class="token operator">></span><span class="token operator">></span> <span class="token function">limit</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">/</span>x<span class="token punctuation">)</span><span class="token operator">^</span>x<span class="token punctuation">,</span>x<span class="token punctuation">,</span><span class="token keyword">inf</span><span class="token punctuation">,</span><span class="token string">'left'</span><span class="token punctuation">)</span> ans <span class="token operator">=</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="2-数值积分"><a href="#2-数值积分" class="headerlink" title="2.数值积分"></a>2.数值积分</h2><h3 id="2-1-Int函数的调用"><a href="#2-1-Int函数的调用" class="headerlink" title="2.1 Int函数的调用"></a>2.1 Int函数的调用</h3><blockquote><p>int(s)   &nbsp;   %求符号表达式对于默认变量的不定积分<br>int(s,x) &nbsp; %求符号表达式s对于自变量x的不定积分<br>int(s,a,b) &nbsp; %求符号表达式对于默认自变量从a到b的积分<br>int(s,x,a,b) &nbsp; %求符号表达式对于自变量x从a到b的积分    </p><h3 id="2-2-int函数求解不定积分的例子"><a href="#2-2-int函数求解不定积分的例子" class="headerlink" title="2.2 int函数求解不定积分的例子"></a>2.2 int函数求解不定积分的例子</h3><p>$\int{xsin(x)dx}$ 、$\int{ysin(x)dx}$<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"> <span class="token operator">></span><span class="token operator">></span>syms x y<span class="token punctuation">;</span> <span class="token operator">></span><span class="token operator">></span>f<span class="token operator">=</span><span class="token function">int</span><span class="token punctuation">(</span><span class="token function">sin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">*</span>x<span class="token punctuation">)</span>f <span class="token operator">=</span><span class="token function">sin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span> x<span class="token operator">*</span><span class="token function">cos</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">></span><span class="token operator">></span> f<span class="token operator">=</span><span class="token function">int</span><span class="token punctuation">(</span><span class="token function">sin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">*</span>y<span class="token punctuation">,</span>x<span class="token punctuation">)</span>f <span class="token operator">=</span><span class="token operator">-</span>y<span class="token operator">*</span><span class="token function">cos</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>```  ### <span class="token number">2.3</span> int函数求解定积分的实例 $<span class="token operator">\</span>int_0<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">&#123;</span><span class="token function">xln</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>x<span class="token punctuation">)</span>dx<span class="token punctuation">&#125;</span>$ 、  $<span class="token operator">\</span>int_0<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">&#123;</span> <span class="token punctuation">&#123;</span><span class="token function">ln</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>x<span class="token punctuation">)</span><span class="token operator">\</span>over <span class="token number">1</span><span class="token operator">+</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">&#125;</span> dx<span class="token punctuation">&#125;</span>$```matlab <span class="token operator">></span><span class="token operator">></span>syms x<span class="token operator">></span><span class="token operator">></span> <span class="token function">int</span><span class="token punctuation">(</span>x<span class="token operator">*</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> ans <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">4</span>  <span class="token function">int</span><span class="token punctuation">(</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>x<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1</span><span class="token operator">+</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>ans <span class="token operator">=</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token operator">/</span><span class="token number">3</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>matlab数组和变量</title>
      <link href="/2020/07/02/mat1/"/>
      <url>/2020/07/02/mat1/</url>
      
        <content type="html"><![CDATA[<h1 id="数组和变量"><a href="#数组和变量" class="headerlink" title="数组和变量"></a>数组和变量</h1><h2 id="1-数组的定义"><a href="#1-数组的定义" class="headerlink" title="1.数组的定义"></a>1.数组的定义</h2><p>matlab数组可以分为：  </p><ul><li>没有元素的空数组（empty array)</li><li>只有一个元素的标量（scalar），它实际上是一个一行一列的数组 </li><li>只有一行或一列的元素的向量（vector)，分别叫作行向量和列向量，同时是一维数组 ；</li><li>普通的具有多行多列元素的二维数组；</li><li>超过二维的多维数组（具有行列页等多个维度）</li></ul><h2 id="2-数组的创建"><a href="#2-数组的创建" class="headerlink" title="2.数组的创建"></a>2.数组的创建</h2><p>创建空数组 </p><blockquote><p> A = []<br>A =<br>    []    </p></blockquote><p>创建一维数组<br><code>var = start_var:step:stop var</code><br>这是一个一维等差数列，分别表示第一个元素、间隔、终止元素；（终止元素不一定取到）step不指定的时候默认为1</p><pre><code class="lang-Var=linspace(start_var,stop_var,n)```">分别指的是起始元素、终止元素、元素个数。n不指定时，默认为100一维等比数组：  ```Var=logspace(start_var,stop_var,n)</code></pre><p>与上面那个类似，默认n为50；<br>创建二维数组<br>创建每一行的元素时，可以利用冒号和函数的方法，只要注意二维数组时，保证每一行（或每一列）具有相同数目的元素。<br><img src="https://picturesshare.oss-cn-beijing.aliyuncs.com/img20200702161037.png" alt=""><br>每个MATLAB变量可以是数组或者矩阵。<br>用一个简单的方法指定变量。例如：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x <span class="token operator">=</span> <span class="token number">3</span>       <span class="token comment">% defining x and initializing it with a value</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>MATLAB执行上述语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x <span class="token operator">=</span>     <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>上述的例子创建了一个1-1的矩阵名为x和的值存储在其元素中。我们可以看看另外的例子<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token comment">% defining x and initializing it with an expression</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>MATLAB执行上述语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x <span class="token operator">=</span>     <span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>MATLAB注意事项：<br>在使用变量之前，必须进行赋值。<br>当系统接收到一个变量之后，这个变量可以被引用。<br>例如：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x <span class="token operator">=</span> <span class="token number">7</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">;</span>y <span class="token operator">=</span> x <span class="token operator">*</span> <span class="token number">7.89</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">y <span class="token operator">=</span>  <span class="token number">441.8400</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>当表达式返回一个结果，不分配给任何变量，系统分配给一个变量命名ans，以后可以继续使用。<br>例如：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">78</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">ans <span class="token operator">=</span>    <span class="token number">8.8318</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>变量 ans 可以被继续使用:<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token number">9876</span><span class="token operator">/</span>ans<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">ans <span class="token operator">=</span>   <span class="token number">1.1182e+03</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>MATLAB可以多个赋值<br>多个任务可以在同一行。例如，  </p><p><code>a = 2; b = 7; c = a * b</code>  </p><p>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">c <span class="token operator">=</span>    <span class="token number">14</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>MATLAB如何显示已经使用的变量名？<br>在MATLAB中可以使用 <code>who ``命令显示所有已经使用的变量名。</code>who```<br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">Your variables are<span class="token operator">:</span>a    ans  b    c    x    y   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br><pre class="line-numbers language-whos```" data-language="whos```"><div class="caption"><span>命令则显示多一点有关变量：</span></div><code class="language-whos```">当前内存中的变量每个变量的类型内存分配给每个变量无论他们是复杂的变量与否&#96;&#96;&#96;whos&#96;&#96;&#96;MATLAB将执行上面的语句，并返回以下结果：  &#96;&#96;&#96; matlab  Name      Size            Bytes  Class     Attributes  a         1x1                 8  double                ans       1x1                 8  double                b         1x1                 8  double                c         1x1                 8  double                x         1x1                 8  double                y         1x1                 8  double   &#96;&#96;&#96;   clear命令删除所有（或指定）从内存中的变量（S）。&#96;&#96;&#96; matlabclear x     % it will delete x, won&#39;t display anythingclear     % it will delete all variables in the workspace             %  peacefully and unobtrusively <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>长任务<br>长任务可以通过使用省略号（…）延伸到另一条线路。例如，<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">initial_velocity <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>acceleration <span class="token operator">=</span> <span class="token number">9.8</span><span class="token punctuation">;</span>time <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>final_velocity <span class="token operator">=</span> initial_velocity <span class="token punctuation">...</span>    <span class="token operator">+</span> acceleration <span class="token operator">*</span> time<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">final_velocity <span class="token operator">=</span>   <span class="token number">196</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>MATLAB格式命令<br>默认情况下，MATLAB 四个小数位值显示数字。这就是所谓的 short format.<br>如果想更精确，需要使用 format 命令。<br>长（long ） 命令格式显示小数点后16位。<br>例如：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">format longx <span class="token operator">=</span> <span class="token number">7</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token operator">/</span><span class="token number">3</span> <span class="token operator">+</span> <span class="token number">5</span> <span class="token operator">^</span> <span class="token number">1.2</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x <span class="token operator">=</span>  <span class="token number">17.231981640639408</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>format short 例子：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">format shortx <span class="token operator">=</span> <span class="token number">7</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token operator">/</span><span class="token number">3</span> <span class="token operator">+</span> <span class="token number">5</span> <span class="token operator">^</span> <span class="token number">1.2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x <span class="token operator">=</span>   <span class="token number">17.2320</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>空格格式命令回合到小数点后两位数字。例如：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">format bankdaily_wage <span class="token operator">=</span> <span class="token number">177.45</span><span class="token punctuation">;</span>weekly_wage <span class="token operator">=</span> daily_wage <span class="token operator">*</span> <span class="token number">6</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">weekly_wage <span class="token operator">=</span>       <span class="token number">1064.70</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>MATLAB 显示大量使用指数表示法。<br>短格式e命令允许以指数的形式显示小数点后四位，加上指数。<br>例如：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">format short e<span class="token number">4.678</span> <span class="token operator">*</span> <span class="token number">4.9</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">ans <span class="token operator">=</span>   <span class="token number">2.2922e+01</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>format long e命令允许以指数的形式显示小数点后四位，加上指数。例如：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">format long ex <span class="token operator">=</span> <span class="token keyword">pi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x <span class="token operator">=</span>     <span class="token number">3.141592653589793e+00</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>format rat 格式大鼠命令给出最接近的有理表达式，从计算所得。例如：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">format rat<span class="token number">4.678</span> <span class="token operator">*</span> <span class="token number">4.9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">ans <span class="token operator">=</span>   <span class="token number">2063</span><span class="token operator">/</span><span class="token number">90</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>MATLAB创建向量<br>向量是一维数组中的数字。 MATLAB允许创建两种类型的矢量：<br>行向量<br>列向量<br>创建行向量括在方括号中的元素的集合，用空格或逗号分隔的元素。<br>例如，<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">r <span class="token operator">=</span>  Columns <span class="token number">1</span> through <span class="token number">4</span>       <span class="token number">7</span>              <span class="token number">8</span>              <span class="token number">9</span>             <span class="token number">10</span>         Column <span class="token number">5</span>      <span class="token number">11</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>另外一个例子，<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">;</span>t <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>res <span class="token operator">=</span> r <span class="token operator">+</span> t <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">res <span class="token operator">=</span>  Columns <span class="token number">1</span> through <span class="token number">4</span>       <span class="token number">9</span>             <span class="token number">11</span>             <span class="token number">13</span>             <span class="token number">15</span>         Column <span class="token number">5</span>      <span class="token number">17</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>创建列向量通过内附组方括号中的元素，使用分号（;)分隔的元素。<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">;</span>  <span class="token number">8</span><span class="token punctuation">;</span>  <span class="token number">9</span><span class="token punctuation">;</span>  <span class="token number">10</span><span class="token punctuation">;</span> <span class="token number">11</span><span class="token punctuation">]</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>MATLAB将执行上面的语句，并返回以下结果：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">c <span class="token operator">=</span>       <span class="token number">7</span>              <span class="token number">8</span>              <span class="token number">9</span>             <span class="token number">10</span>             <span class="token number">11</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>]]></content>
      
      
      <categories>
          
          <category> matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拍照任务APP数学建模</title>
      <link href="/2020/07/01/post/"/>
      <url>/2020/07/01/post/</url>
      
        <content type="html"><![CDATA[<h1 id="基于模糊数学的“拍照赚钱”任务定价最优方案研究"><a href="#基于模糊数学的“拍照赚钱”任务定价最优方案研究" class="headerlink" title="基于模糊数学的“拍照赚钱”任务定价最优方案研究"></a>基于模糊数学的“拍照赚钱”任务定价最优方案研究</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><hr><p>&emsp; 随着移动互联网的快速发展，越来越多的企业将大量线上、线下需求分解成微型兼职任务给广泛的大众执行，这样能够快速解决企业的弹性劳务需求，同时用户也能通过手机轻松赚钱。“拍照赚钱”APP就是其中的典型代表。本文利用附件相关数据，分析空间任务分布密度、任务供需情况、任务完成率等指标，建立综合吸引力模型，给出不同任务分布密度下的最优定价方案。我们的主要工作如下：<br>&emsp; 问题一要求给出任务定价规律，并给出任务失败原因。我们对附件一中所数据进行分析，将任务分布区域（经度 ，纬度 ）划分为  个子区域，统计每一子区域的任务密度和任务平均定价并拟合出任务密度与定价间的数学关系。此外，我们将所给数据分为成功组和失败组并分别做出其任务分布密度和任务定价散点图和等高线图，对比分析任务失败原因。观察得失败组任务分布主要集中于经度 、纬度 以及经度 、纬度 这两个范围间，且定价较低。此外结合附件二会员位置信息和任务请求上限，分析成功组和失败组各子区域的任务供需匹配度发现失败组供大于需，缺少完成任务会员。最终总结出任务失败的原因有以下三点：（1）地理位置的原因；（2）定价及定价随任务密度增加的变化速率的大小；（3）任务密度与附近会员的数目的匹配程度。<br>&emsp; 问题二要求给出新的定价方案，并对其做出评价。对此我们根据模糊数学中隶属函数的方法，从会员心理层面出发，研究任务定价对会员的吸引力。查阅资料知当任务定价为68.56时吸引力达到0.5，该定价合理。此外我们根据会员信誉值对吸引力函数进行修正，综合考虑定价对公司成本，会员吸引力和任务难易度这三项指标的影响，利用熵值取权法确定各项指标权重，构建综合吸引力模型。通过实码加速遗传算法求解得任务最优定价为73.2，并利用该定价修正任务密度与定价间的函数关系，得到不同位置的任务定价。为确定该方案的合理性，我们利用附件一所给任务信息构建朴素贝叶斯分类器，判断该方案任务完成情况。经检验分类器准确率达到100%，且新方案下任务完成率提高了约20%，达到82.2%，该方案合理可行。<br>&emsp; 问题三要求给出任务打包发布是的任务定价方案，并分析该方案对任务完成情况的影响。对此我们按照每3份任务进行打包，经分析知任务打包发布会增加会员日均任务完成量、提高任务完成率且为公司节约成本。在相同吸引力值的情况下，单笔任务定价减少为60，对此我们修正综合吸引力函数，给出不同位置处的任务定价，并利用贝叶斯分类器对其进行检验。该方案下任务完成率达到85.4%，有明显提高。<br>问题四要求给出新项目的定价方案并评价其效果。我们将任务分布空间化分为 个子区域，分析知任务主要集中在少数几个区域。求解每个子区域的任务密度，并将问题二中的最优定价作为任务定价均值，确定不同任务密度下补贴方案。经检验该定价方案任务完成率达到79.4%，该方案合理可行。<br>关键词：任务定价方案、任务分布密度、吸引力函数、朴素贝叶斯分类器</p><h2 id="一、-问题重述"><a href="#一、-问题重述" class="headerlink" title="一、    问题重述"></a>一、    问题重述</h2><p>&emsp; 传统的产品铺货率调查一般是由市场调查公司来做的，如果是全国性的铺货率调查项目，一般情况甲方会委托一个全国性的市场调查公司来进行。然而随着移动互联网的普及，一种基于移动互联网的商业检查领域的自主式兼职劳务分包平台正在蓬勃发展，其中“拍拍赚”就是典型代表[1]。与传统市场调查方式相比此方式具有数据采集过程更加高效、总体质量更加有保障、成本更加有竞争力等特点[2]。在这样的背景下，公司如何更为合理高效的管理平台上运行的APP成为了工作的中点，而APP中的任务定价又关系到任务的完成率，直接决定了公司的收益和APP的普及程度。因此任务定价是整个环节的关键因素。<br>基于以上背景，利用附件提供数据，建立数学模型研究如下问题：</p><ol><li>给出合适的模型来反映附件一中项目的任务定价规律，并基于该模型分析任务未完成的原因。</li><li>依据不同指标给出新的定价方案，并与原来的定价方案比较分析其可行性。</li><li>建立任务打包发布时的定价模型，并分析在这种方案下的任务完成情况。</li><li>根据上文的定价方案模型对附件三中的新项目给出任务定价方案，并评价该方案的实施效果。</li></ol><h2 id="二、模型假设"><a href="#二、模型假设" class="headerlink" title="二、模型假设"></a>二、模型假设</h2><ol><li>假设附件所给数据均真实、可信。</li><li>假设附件一和附件二中所给数据来自同一段时间、或时间相差不多。</li><li>研究时间段，平台运行正常，任务和会员的数量及分布密度没有太大变化。</li><li>附件中所给任务均能被用户预定。</li><li>会员可通过APP得知周围所有任务分布情况。<h2 id="三、符号及变量说明"><a href="#三、符号及变量说明" class="headerlink" title="三、符号及变量说明"></a>三、符号及变量说明</h2>| 符号 | 说明 |<br>| ——— | ——— |<br>|| 中等文本 |<br>|  | 短文本 | </li></ol><h2 id="四、问题分析"><a href="#四、问题分析" class="headerlink" title="四、问题分析"></a>四、问题分析</h2><h3 id="4-1-问题一的分析"><a href="#4-1-问题一的分析" class="headerlink" title="4.1 问题一的分析"></a>4.1 问题一的分析</h3><p>问题一要求确定任务的定价规律并分析任务失败的原因。我们首先对附件一所给数据进行预处理，检查是否存在错误数据和空缺数据。然后根据数据确定任务分布的大致区域并将其划分为20个子区域，观察每一子区域的任务分布情况。通过统计所得每一子区域的任务密度和该子区域的任务定价均值来寻求任务定价与任务分布密度的关系。此外我们利用附件二所给会员位置信息分析成功组、失败组每一子区域的任务供需匹配度，同时对比任务成功组和失败组任务分布的区域、任务密度、任务定价均值来寻求任务失败原因。</p><h3 id="4-2-问题二的分析"><a href="#4-2-问题二的分析" class="headerlink" title="4.2 问题二的分析"></a>4.2 问题二的分析</h3><p>问题二要求给出行的任务定价方案，并分析方案的可行性。方案定价是否合理可行涉及到多方的博弈，会员希望任务简单、定价高，而公司则希望利润大、任务完成率高。为此我们同时考虑公司成本、任务完成率和任务定价对会员吸引力，建立综合吸引力模型求解任务最优定价均值，并根据问题一所得结果给出不同任务分布密度下的任务定价。在此过程中我们充分考虑双方的利益以实现多赢。对于任务定价的可行性分析，选择附件一中任务成功组数据作为训练样本，构建朴素贝叶斯分类器求解新的定价下任务完成率，讨论方案是否可行。</p><h3 id="4-3-问题三的分析"><a href="#4-3-问题三的分析" class="headerlink" title="4.3 问题三的分析"></a>4.3 问题三的分析</h3><p>问题三要求确定任务打包发布时的定价，并分析此方式下任务的完成情况。对此我们将每三个任务进行打包，分析任务打包发布时对会员吸引力的变化，修正上文所给的任务定价吸引力隶属函数，重新求解任务的最优定价。并给出不同任务分布密度下的定价。利用上文训练好的朴素贝叶斯分类器确定任务完成率，分析任务完成情况。</p><h3 id="4-4问题四的分析"><a href="#4-4问题四的分析" class="headerlink" title="4.4问题四的分析"></a>4.4问题四的分析</h3><p>问题四要求对附件三中新的任务数据给出定价方案，并分析其可行性。对此我们对附件三所给数据进行预处理，并分析任务分布大致区域和每个子区域任务的密度。依据上文确定的任务分布密度与定价间的函数关系给出新任务的定价。利用朴素贝叶斯分类器对任务完成情况进行分析。</p><h2 id="五、模型的建立与求解"><a href="#五、模型的建立与求解" class="headerlink" title="五、模型的建立与求解"></a>五、模型的建立与求解</h2><h3 id="5-1-根据任务分布密度分析定价规律和任务失败原因"><a href="#5-1-根据任务分布密度分析定价规律和任务失败原因" class="headerlink" title="5.1 根据任务分布密度分析定价规律和任务失败原因"></a>5.1 根据任务分布密度分析定价规律和任务失败原因</h3><p>由附件一所给数据知，“拍照赚钱”任务的分布情况（经度和纬度）和任务的定价存在一定的联系。而任务的分布规律和定价又决定着任务的完成情况。因此本文通过对所给数据进行分析、预处理，利用数据挖掘技术[3]分析其任务定价的原因和任务失败的情况。</p><h4 id="5-1-1-数据的预处理"><a href="#5-1-1-数据的预处理" class="headerlink" title="5.1.1 数据的预处理"></a>5.1.1 数据的预处理</h4><p>对附件一中所给数据进行预处理。统计个定价的数目及其所占比例做饼状图如下所示。<br><img src="https://storage.live.com/items/38A18B85544B9C92!464?authkey=ADfqLfCRDucnILI" alt="图1.1" title="图1.1 各定价所占比例饼状图"></p><p>如图1.1和表1.1所示，任务的定价分布在 这个区间内，且定价在 这个范围内的数据约占51%。而定价在80以上的数据仅占4.8%。定价主要集中于65,65.5,66,66.5,70和75这几个数中。其它定价相对较少。</p><h4 id="5-1-2-定价的标准化处理"><a href="#5-1-2-定价的标准化处理" class="headerlink" title="5.1.2 定价的标准化处理"></a>5.1.2 定价的标准化处理</h4><p>由于定价数值相对较大，不便分析和处理，且为消除不同定价间维度的影响我们对数据进行标准化处理。<br>数据的标准化是指将数据按比例缩放，使之落到一个较小的特定区间。若落到0-1区间，即为数据的归一化处理通过归一化处理除去数据的单位限制，将其转化为无量纲的纯数值。在进行数据的分类和处理中便于不同单位或量级的指标能够进行比较判别。<br>  $MIN-MAX$标准化<br>  $MIN-MAX$标准化是对原始数据的线性变化。设 分别为属性 的最小值和最大值，将 的一个原始值 ，通过 标准化将其映射在区间[0,1]中的值 ，其公式为：</p><script type="math/tex; mode=display">x_j^* ={x_j-minA\over maxA-min A}\tag{1-1}</script><p>若选择均值方差标准化将会有负值出现，与定价的含义矛盾，故我们选择 标准化。我们将任务的横纵坐标作为x轴和y轴，将标准化后的任务定价作为z轴，做出任务分布与定价的三维散点图，peak图及等高线图如下所示。</p><p><img src="https://picturesshare.oss-cn-beijing.aliyuncs.com/img20200702095755.png" alt=""><br>如上图所示在经度 113.2~114.2，纬度 22.5~23.5这个范围内任务较为集中，故其定价较低。而任务较为分散的区域定价往往较低。<br>为量化任务分布密度与任务定价间的对应关系，寻求两者间的内在关联，我们建立基于任务分布密度的定价模型。<br>5.1.3 分析任务分布密度与任务定价间的数学联系<br>任务分布密度的表达式如下所示</p><script type="math/tex; mode=display">m_i={n_i\over N}\tag{1-2}</script><blockquote><p>其中 $m_i$为第$i$区域的任务密度<br>$n_i$为第i区域的任务数量<br>N为该区域内的总任务数</p></blockquote><p>由附件一所给数据知，该任务分布的区域在经度 ，维度 这个矩形区域内。为统计不同子区域的任务分布密度，我们取经、纬度步的长为0.04，将该正方形区域划分为5*4的小格。其中，每一个小格代表一个子区域，统计不同子区域内任务分布的数量及任务定价均值。如下表所示。<br>表1.2 任务数量与任务定价均值统计表<br><img src="https://picturesshare.oss-cn-beijing.aliyuncs.com/img20200702102224.png" alt=""><br>为更好的了解任务分布情况与任务定价间的对应关系，同时消除不同数量间维度的影响，我们将任务分布数量转换为任务密度，研究任务密度与任务定价间的关系。如图1.5所示，将任务定价标准化处理后调用Matlab cftool工具箱，拟合任务分布密度与任务定价归一化数据间的函数关系。</p><p><img src="https://picturesshare.oss-cn-beijing.aliyuncs.com/img1.5.png" alt="图1.5"></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matlab 模糊数学 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
